{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-list/post-list.component.ts","./src/app/post-list/post-list.component.html","./src/app/post-list/post-list.module.ts","./src/app/post-list/post.service.ts","./src/app/post-list/post/post.component.ts","./src/app/post-list/post/post.component.html","./src/app/post-list/post/tag/tag.component.ts","./src/app/post-list/post/tag/tag.component.html","./src/app/shared/components/select-filter/select-filter.component.ts","./src/app/shared/components/select-filter/select-filter.component.html","./src/app/shared/components/select-filter/select-filter.module.ts","./src/app/shared/models/post.ts","./src/app/shared/pipes/safe-html.pipe.ts","./src/app/shared/utils/cloneDeep.ts","./src/app/shared/validators/unique.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'posting-system';\n}\n","<app-post-list></app-post-list>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { PostListModule } from './post-list/post-list.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    PostListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { FormControl } from '@angular/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  catchError,\n  distinctUntilChanged,\n  finalize,\n  of,\n  Subscription,\n} from 'rxjs';\nimport { Post } from '../shared/models/post';\nimport { PostService } from './post.service';\nimport { cloneDeep } from '../shared/utils/cloneDeep';\nimport { PostRaw } from '../shared/interfaces/post';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  postList: Post[] = [];\n\n  tags: string[] = [];\n\n  isLoading = true;\n\n  newPost: Post = new Post({} as PostRaw);\n\n  private postListCopy: Post[] = [];\n\n  private subscription = new Subscription();\n\n  constructor(\n    private postService: PostService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.initAllPost();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  updateTagList(): void {\n    this.tags = Array.from(\n      new Set([...this.postList.map((d) => d.tags)].flat())\n    );\n  }\n\n  updatePostList(post: Post | null): void {\n    if (post) {\n      const index = this.postList.findIndex((d) => d.id === post.id);\n      if (index > -1) {\n        this.postList[index] = post;\n      } else {\n        this.postList.push(post);\n      }\n      if (post.deleted) {\n        const copyIndex = this.postListCopy.findIndex((d) => d.id === post.id);\n        this.postListCopy[copyIndex].deleted = true;\n        this.postList = this.postListCopy.filter((d) => !d.deleted);\n      }\n      this.updatePosListDependencies();\n    }\n  }\n\n  filterPostList(value: string) {\n    if (value) {\n      this.postList = this.postListCopy.filter((d) => d.tags.includes(value));\n    } else {\n      this.postList = cloneDeep<Post[]>(this.postListCopy);\n    }\n  }\n\n  trackById(index: number, item: Post): string | number {\n    return item.id || index;\n  }\n\n  private initAllPost() {\n    this.subscription.add(\n      this.postService\n        .getAll()\n        .pipe(\n          finalize(() => {\n            this.isLoading = false;\n            this.cdr.detectChanges();\n          }),\n          catchError((err) => (console.error(err), of([])))\n        )\n        .subscribe((postList) => {\n          this.postList = postList;\n          this.updatePosListDependencies();\n        })\n    );\n  }\n\n  private updatePosListDependencies(): void {\n    this.postListCopy = cloneDeep<Post[]>(this.postList);\n    this.updateTagList();\n  }\n}\n","<div class=\"container\">\n  <div class=\"loader\" *ngIf=\"isLoading\">Loading...</div>\n\n  <div class=\"post-list\" *ngIf=\"!isLoading\">\n    <app-select-filter\n      [options]=\"tags\"\n      (filtered)=\"filterPostList($event)\"\n    ></app-select-filter>\n\n    <ng-container *ngFor=\"let post of postList; trackBy: trackById\">\n      <app-post\n        [post]=\"post\"\n        [tags]=\"tags\"\n        (postUpdated)=\"updatePostList($event)\"\n      ></app-post>\n    </ng-container>\n\n    <app-post\n      [post]=\"newPost\"\n      [tags]=\"tags\"\n      [isEditMode]=\"!newPost.id\"\n      (postUpdated)=\"updatePostList($event)\"\n    ></app-post>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PostListComponent } from './post-list.component';\nimport { PostService } from './post.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { TagComponent } from './post/tag/tag.component';\nimport { SafeHTMLPipe } from '../shared/pipes/safe-html.pipe';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SelectFilterModule } from '../shared/components/select-filter/select-filter.module';\n\n@NgModule({\n  declarations: [PostListComponent, PostComponent, TagComponent, SafeHTMLPipe],\n  imports: [CommonModule, HttpClientModule, ReactiveFormsModule, SelectFilterModule],\n  providers: [PostService],\n  exports: [PostListComponent],\n})\nexport class PostListModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable, of } from 'rxjs';\nimport { PostRaw } from '../shared/interfaces/post';\nimport { Post } from '../shared/models/post';\n\n@Injectable()\nexport class PostService {\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<Post[]> {\n    return this.http\n      .get<PostRaw[]>('/assets/mocks/post-list.json')\n      .pipe(map((response) => response.map((d) => new Post(d))));\n  }\n\n  updatePost(post: Post): Observable<boolean> {\n    return of(true);\n  }\n\n  addPost(post: Post): Observable<Post> {\n    post.id = (Math.random() * Math.random() * Math.random()).toString(); // Server generate id simulation\n    return of(post);\n  }\n\n  deletePost(postId: string): Observable<boolean> {\n    return of(true);\n  }\n}\n","import { catchError, of, Subscription } from 'rxjs';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Post } from 'src/app/shared/models/post';\nimport { PostService } from '../post.service';\nimport { uniqueValidator } from 'src/app/shared/validators/unique';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() post: Post = {} as Post;\n\n  @Input() tags: string[] = [];\n\n  @Input() isEditMode = false;\n\n  @Output() postUpdated = new EventEmitter<Post | null>();\n\n  availableTags: string[] = [];\n\n  isAddTagFieldShowed = false;\n\n  form: FormGroup = new FormGroup({});\n\n  addTagControl: FormControl = new FormControl('');\n\n  subscription = new Subscription();\n\n  constructor(\n    private postService: PostService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['tags'] && changes['tags'].currentValue) {\n      this.updateAvailableTags(changes);\n    }\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      title: new FormControl(this.post.title),\n      text: new FormControl(this.post.text),\n      tags: new FormControl(this.post.tags || []),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  setToEditMode(isEdit: boolean): void {\n    this.isEditMode = isEdit;\n  }\n\n  clearChanges(): void {\n    this.post.id ? this.form.patchValue(this.post) : this.form.reset();\n    this.showAddTagField(false);\n    this.setToEditMode(false);\n    this.updateAvailableTags();\n  }\n\n  savePost(): void {\n    const post = new Post(Object.assign({}, this.post, this.form.value));\n    if (post.id) {\n      this.updatePost(post);\n    } else {\n      this.addPost(post);\n    }\n  }\n\n  updatePost(post: Post): void {\n    this.subscription.add(\n      this.postService\n        .updatePost(post)\n        .pipe(catchError((err) => (console.error(err), of(false))))\n        .subscribe((updated: boolean) => {\n          if (updated) {\n            this.setToEditMode(false);\n            this.postUpdated.emit(post);\n          }\n        })\n    );\n  }\n\n  addPost(post: Post): void {\n    this.subscription.add(\n      this.postService\n        .addPost(post)\n        .pipe(catchError((err) => (console.error(err), of(null))))\n        .subscribe((newPost: Post | null) => {\n          if (newPost) {\n            this.postUpdated.emit(newPost);\n            this.clearChanges();\n            this.setToEditMode(true);\n          }\n        })\n    );\n  }\n\n  deletePost(): void {\n    this.subscription.add(\n      this.postService\n        .deletePost(this.post.id)\n        .pipe(catchError((err) => (console.error(err), of(false))))\n        .subscribe((deleted: boolean) => {\n          if (deleted) {\n            this.post.deleted = true;\n            this.postUpdated.emit(this.post);\n          }\n        })\n    );\n  }\n\n  showAddTagField(show?: boolean): void {\n    this.isAddTagFieldShowed = show ?? !this.isAddTagFieldShowed;\n    if (!this.isAddTagFieldShowed) {\n      this.addTagControl.reset();\n    }\n  }\n\n  updateTags(tag: string | null): void {\n    const tagsControl = this.form.get('tags');\n    if (tagsControl && tag) {\n      let tags: string[] = tagsControl.value || [];\n      if (tags.includes(tag)) {\n        tags = tags.filter((d) => d !== tag);\n      } else {\n        tags.push(tag);\n      }\n      tagsControl.patchValue(tags);\n    }\n    this.updateAvailableTags();\n  }\n\n  addTag(): void {\n    const value = this.addTagControl.value.trim();\n    if (value && !this.addTagControl.errors) {\n      this.updateTags(value);\n      this.addTagControl.reset();\n    }\n  }\n\n  private updateAvailableTags(changes?: SimpleChanges) {\n    if (changes) {\n      this.availableTags = changes['tags'].currentValue.filter(\n        (d: string) => !this.post.tags?.includes(d)\n      );\n    } else {\n      this.availableTags = this.tags.filter(\n        (d: string) => !this.form.get('tags')?.value?.includes(d)\n      );\n    }\n    this.addTagControl.setValidators(\n      uniqueValidator(this.form.get('tags')?.value)\n    );\n  }\n}\n","<div class=\"post-item\" *ngIf=\"post && form\">\n  <ng-container [ngSwitch]=\"isEditMode\">\n    <ng-container *ngSwitchCase=\"false\">\n      <h3 class=\"title\">{{ post.title }}</h3>\n      <p class=\"text\" [innerHTML]=\"post.text | safeHTML\"></p>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"true\" [formGroup]=\"form\">\n      <input\n        class=\"title-input\"\n        type=\"text\"\n        name=\"title\"\n        formControlName=\"title\"\n        placeholder=\"Type Title\"\n      />\n      <textarea\n        class=\"text-input\"\n        name=\"text\"\n        rows=\"1\"\n        formControlName=\"text\"\n        placeholder=\"Type text\"\n      ></textarea>\n    </ng-container>\n  </ng-container>\n\n  <div class=\"actions-container\">\n    <div class=\"tag-list\">\n      <ng-container *ngFor=\"let tag of this.form.get('tags')?.value\">\n        <app-tag\n          [tag]=\"tag\"\n          [isEditMode]=\"isEditMode\"\n          (tagRemoved)=\"updateTags($event)\"\n        ></app-tag>\n      </ng-container>\n      <ng-container *ngIf=\"isEditMode\">\n        <button class=\"primary-button add-button\" (click)=\"showAddTagField()\">\n          {{ isAddTagFieldShowed ? \"-\" : \"+\" }}\n        </button>\n        <ng-container *ngIf=\"isAddTagFieldShowed\">\n          <input\n            [formControl]=\"addTagControl\"\n            [ngClass]=\"{ invalid: addTagControl.errors }\"\n            type=\"text\"\n            placeholder=\"add Tag\"\n            list=\"tag-list\"\n          />\n          <datalist id=\"tag-list\">\n            <option *ngFor=\"let item of availableTags\" [value]=\"item\"></option>\n          </datalist>\n          <button\n            class=\"primary-button add-tag-button\"\n            (click)=\"addTag()\"\n            [disabled]=\"addTagControl.errors\"\n          >\n            Add\n          </button>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <div class=\"actions\" [ngSwitch]=\"isEditMode\">\n      <ng-container *ngSwitchCase=\"false\">\n        <button\n          class=\"primary-button delete-post-button\"\n          (click)=\"deletePost()\"\n        >\n          Delete\n        </button>\n        <button class=\"primary-button\" (click)=\"setToEditMode(true)\">\n          Edit\n        </button>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"true\">\n        <button class=\"secondary-button\" (click)=\"clearChanges()\">\n          Cancel\n        </button>\n        <button class=\"primary-button\" (click)=\"savePost()\">Save</button>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-tag',\n  templateUrl: './tag.component.html',\n  styleUrls: ['./tag.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagComponent implements OnInit {\n  @Input() tag: string = '';\n\n  @Input() isEditMode = false;\n\n  @Output() tagRemoved = new EventEmitter<string | null>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  removeTag(): void {\n    this.tagRemoved.emit(this.tag);\n  }\n}\n","<span class=\"tag-item\" *ngIf=\"tag\">\n  {{ tag }}\n  <button *ngIf=\"isEditMode\" class=\"remove-button\" (click)=\"removeTag()\">\n    x\n  </button>\n</span>\n","import { distinctUntilChanged, Subscription } from 'rxjs';\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-select-filter',\n  templateUrl: './select-filter.component.html',\n  styleUrls: ['./select-filter.component.scss'],\n})\nexport class SelectFilterComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() options: string[] = [];\n\n  @Output() filtered = new EventEmitter<string>();\n\n  control = new FormControl('');\n\n  private subscription = new Subscription();\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['options'] && !changes['options'].firstChange) {\n      if (!changes['options'].currentValue.includes(this.control.value)) {\n        this.control.patchValue('', { emitEvent: true });\n      } else {\n        this.control.updateValueAndValidity({ emitEvent: true });\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.initFilter();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private initFilter(): void {\n    this.subscription.add(\n      this.control.valueChanges.subscribe((value: string) => {\n        this.filtered.emit(value);\n      })\n    );\n  }\n}\n","<div class=\"select-filter\">\n  <label>\n    Tag Filter\n    <select [formControl]=\"control\">\n      <option value=\"\" [defaultSelected]=\"\">Not selected</option>\n      <option\n        *ngFor=\"let option of options\"\n        [value]=\"option\"\n        [selected]=\"control.value === option\"\n      >\n        {{ option }}\n      </option>\n    </select>\n  </label>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectFilterComponent } from './select-filter.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [SelectFilterComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [SelectFilterComponent],\n})\nexport class SelectFilterModule {}\n","import { PostRaw } from \"../interfaces/post\";\n\nexport class Post {\n  id!: string;\n  title!: string;\n  text!: string;\n  tags!: string[];\n  deleted!: boolean;\n\n  constructor(raw: PostRaw) {\n    Object.assign(this, raw);\n    this.deleted = false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHTML'\n})\nexport class SafeHTMLPipe implements PipeTransform {\n\n  constructor(\n    private sanitizer: DomSanitizer\n  ) {}\n\n  transform(value: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n\n}\n","export const cloneDeep = <T>(data: T): T => {\n  return JSON.parse(JSON.stringify(data));\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function uniqueValidator(list: string[]): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const isNotUnique = control.value && list?.includes(control.value);\n    return isNotUnique ? {notUnique: {value: control.value}} : null;\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}